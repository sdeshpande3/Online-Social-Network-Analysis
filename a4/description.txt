
*****collect.py*****
1. Establish twitter connection and collect data from Twitter API.
2. Read the names.txt file containing the Twitter screen names and retrieve the Twitter user objects and friends of each screen name. 
   Store this data using pickle into information.pkl. The information.pkl contains the screen names, their ids and their friends id.
3. Collected the tweets by querying the parameter as the screen_name of the users.
   Store the tweets using pickle into a file named as tweets.pickle.

*****cluster.py*****
1. This file contains algorithms such as breadth-first search, bottom-up, approximate betweenness, girvan newman.
2. original.png graph consists of users and their friend count. A subgraph is created which consists of the users and friend count and 
   this graph is used later which returns a subgraph containing nodes whose degree is greater than or equal to min_degree.It is used to 
   prune the original graph. 
3. clusters.png graph is created using Girvan Newman algoithm.

*****classify.py*****
1. Loaded the tweets stored in tweets.pickle into a dictionary named as tweets.
2. Downloaded the AFINN dataset for the analysis of raw data (tweets) whether the tweets about the users is positive, negative or mixed.
3. Tokenized the tweets into tokens and score the tokens on the basis of AFINN dataset.
4. If the tweet contains more score of positive words than negative words then the tweet belongs to the positive class.
5. If the tweet contains more score of negative words than positive words then the tweet belongs to the negative class.
6. And if the score of positive and negative words are equal then the tweet belongs to the mixed class.
7. Stored the results in the file named as classify.pickle.

*****summarize.py*****
The information which is colected from collect.py, cluster.py and classify.py is used to find the following entries:
	(a) Number of users collected
	(b) Number of messages collected
	(c) Number of communities discovered
	(d) Average number of users per community
	(e) Number of instances per class found
	(f) One example from each class
	
*****Conclusion*****
1. Since we are using Twitter API and jack is the CEO of Twitter, he has more number of friends as compared to the remaining three screen names.
2. From the amount of tweets saved, it can be concluded that there are more number of positive tweets than negative and neutral tweets. 
3. sundarpichai and jack has maximum number of common friends. JeffBezos and satyanadella have no friends in common. Similar JeffBezos and sundarpichai 
   have no friends in common.
4. Since JeffBezos is non-Indian and others are Indians, they have more common friends and hence JeffBezos is excluded. 

